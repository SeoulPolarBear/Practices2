Framework
----------------------------------------------------------------------
장점
----
1. 프레임워크는 기본적으로 틀이 있다.
2. 규칙이 적욛된 틀 안에서 규칙과 가이드대로 개발을 해나가면 
초보자라도 품질(Quality) 좋은 웹사이트를 만들 수 있다.
3. 개발 가이드 자체가 있기 때문에 안정성, 통합성, 유지보수, 단축성, 확장성 등 일관성 있게 추진이 가능하다.
4. 유지보수 등을 초보자가 쉽게 충원될 수시 쉽게 배울 수 있음을 보장된다.

단점
----
1. 힉습곡성이 많많치 않다. 배우는 것이 어렵다.
2. 규칙과 가이드에서 벗어나는 것을 대부분의 프레임워크가 허용하지 않는다.
3. 기존의 전통적인 방식으로 개발된 웹사이트와 통합하기가 쉽지 않다. 
즉, 예전 방식과 호환이 되기 어려울 수 있다.



Virtual Environment
----------------------------------------------------------------------
1. 가상 환경은 웹 개발 프로젝트를 진행할 때 독립된 환경을 구축한다.
2. 웹 개발 프로젝트 성격에 다라 프로젝트 마다 프로젝트에 사용되는 라이브러리나 관련 버전들이 다를 수 있다.
3. 이 때 가상환경 도구를 이용하여 각각의 프로젝트에 맞는 독립된 환경을 구축할 필요가 있다.
4. 개발자의 PC 한 곳에 각각 파이썬 및 장고 그 외 라이브러리들을 버전별로 맞춰서 세팅을 할 수 있다.
5. 여러개의 프로젝트를 만드는 것이 아니라면 가상환경이 필요하기 않을 순 있다. 
6. 가상 환경 구축 툴이 여러개 있는데 파이썬 내 모듈인 venv 모듈을 사용하여 가상환경을 구축할 수 있다.
python -m venv 가상환경이름 -> 파이썬 내 venv라는 모듈을 사용하여 구축

즉, 버전 및 독립적인 프로젝트를 구현하기 위해서 Virtual Environment를 사용하는 이유이다.




Project VS App(Application)
----------------------------------------------------------------------
기본적으로는 App == Application == Program 같은 의미로 생각하면 됨.
----------------------------------------------
아래 설명들은 Django에 한해서 국한됨을 상기해야 한다.
----------------------------------------------
1. 프로젝트는 가장 큰 또는 최상위의 웹 개발 디렉토리(폴더)라고 생각하면 된다.
2. 웹 개발 시 최상위 폴더를 생성하고 개발을 해나가는데 이것은 결국 해당 웹 사이트의 루트 폴더가 되고 곧 프로젝트이다.
3. 이 안에 여러개의 프로그램(회원가입, 게시판, 설문조사 등)을 만들어 넣을 수 있는데 "APP(앱)"이라 부른다.
4. ※★"결국, 이런 여러 개의 앱들이 모여서 하나의 프로젝트가 되고 이는 곧 하나의 웹사이트가 된다."★※

5. 장고에서 프로젝트 생성은 명령 프롬프트에서 django-admin startproject 프로젝트명 입력하고 생성
6. 보통은 위와 같이 생성을 하는데 이렇게 생성 시 같은 프로젝트명으로 환경설정 폴더가 생성이 된다는 것을 명심.
7. 별도의 환경설정 폴더명을 가지는 방식으로 생성하는 것도 가능하나 장고 학습 시에는 이렇게 하는 것도 큰 상관은 없다.
8. 앱 생성은 python manage.py startapp 앱명 으로 생성한다.

즉, 프로젝트 안에는 프로젝트명의 환경 폴더와 프로젝트의 기능을 담당하는 앱들의 폴더 이렇게 구성을 하고 있다.



Model
----------------------------------------------------------------------
모델은 곧 데이터, 데이터베이스
1. 장고는 모델을 이용하여 데이터 및 데이터베이스 연동 작업을 처리한다.
2. models.py를 사용하기 위해서는 migrate을 사용해야 한다. 그래야 table이 생성된다.
3. Django의 특징은 SQL문을 날리는 것이 아닌 코드만으로 DB를 조작한다.
4. 코딩을 통해서 테이블을 생성하고 데이터베이스 연동 작업을 처리한다.
5. 장고의 모델(Model)을 사용하면 기존의 SQL 쿼리문과 같은 것 없이 데이터 처리 및 DB 연동 작업을 할 수 있다.



MVC
----------------------------------------------------------------------
Model : DB를 처리하는 기능
View : 화면에 보여지는 것을 보여지는 역할
Control : router로 요청이 들어오면 요청에 맞게 코드를 처리하는 기능



MTV
----------------------------------------------------------------------



















